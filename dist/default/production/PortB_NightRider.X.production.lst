

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jul 09 13:30:20 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     0007                     PORTC           equ	7	;# 
    68     0008                     PORTD           equ	8	;# 
    69     0009                     PORTE           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000D                     PIR2            equ	13	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0011                     TMR2            equ	17	;# 
    79     0012                     T2CON           equ	18	;# 
    80     0013                     SSPBUF          equ	19	;# 
    81     0014                     SSPCON          equ	20	;# 
    82     0015                     CCPR1           equ	21	;# 
    83     0015                     CCPR1L          equ	21	;# 
    84     0016                     CCPR1H          equ	22	;# 
    85     0017                     CCP1CON         equ	23	;# 
    86     0018                     RCSTA           equ	24	;# 
    87     0019                     TXREG           equ	25	;# 
    88     001A                     RCREG           equ	26	;# 
    89     001B                     CCPR2           equ	27	;# 
    90     001B                     CCPR2L          equ	27	;# 
    91     001C                     CCPR2H          equ	28	;# 
    92     001D                     CCP2CON         equ	29	;# 
    93     001E                     ADRESH          equ	30	;# 
    94     001F                     ADCON0          equ	31	;# 
    95     0081                     OPTION_REG      equ	129	;# 
    96     0085                     TRISA           equ	133	;# 
    97     0086                     TRISB           equ	134	;# 
    98     0087                     TRISC           equ	135	;# 
    99     0088                     TRISD           equ	136	;# 
   100     0089                     TRISE           equ	137	;# 
   101     008C                     PIE1            equ	140	;# 
   102     008D                     PIE2            equ	141	;# 
   103     008E                     PCON            equ	142	;# 
   104     0091                     SSPCON2         equ	145	;# 
   105     0092                     PR2             equ	146	;# 
   106     0093                     SSPADD          equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009C                     CMCON           equ	156	;# 
   111     009D                     CVRCON          equ	157	;# 
   112     009E                     ADRESL          equ	158	;# 
   113     009F                     ADCON1          equ	159	;# 
   114     010C                     EEDATA          equ	268	;# 
   115     010D                     EEADR           equ	269	;# 
   116     010E                     EEDATH          equ	270	;# 
   117     010F                     EEADRH          equ	271	;# 
   118     018C                     EECON1          equ	396	;# 
   119     018D                     EECON2          equ	397	;# 
   120     0000                     INDF            equ	0	;# 
   121     0001                     TMR0            equ	1	;# 
   122     0002                     PCL             equ	2	;# 
   123     0003                     STATUS          equ	3	;# 
   124     0004                     FSR             equ	4	;# 
   125     0005                     PORTA           equ	5	;# 
   126     0006                     PORTB           equ	6	;# 
   127     0007                     PORTC           equ	7	;# 
   128     0008                     PORTD           equ	8	;# 
   129     0009                     PORTE           equ	9	;# 
   130     000A                     PCLATH          equ	10	;# 
   131     000B                     INTCON          equ	11	;# 
   132     000C                     PIR1            equ	12	;# 
   133     000D                     PIR2            equ	13	;# 
   134     000E                     TMR1            equ	14	;# 
   135     000E                     TMR1L           equ	14	;# 
   136     000F                     TMR1H           equ	15	;# 
   137     0010                     T1CON           equ	16	;# 
   138     0011                     TMR2            equ	17	;# 
   139     0012                     T2CON           equ	18	;# 
   140     0013                     SSPBUF          equ	19	;# 
   141     0014                     SSPCON          equ	20	;# 
   142     0015                     CCPR1           equ	21	;# 
   143     0015                     CCPR1L          equ	21	;# 
   144     0016                     CCPR1H          equ	22	;# 
   145     0017                     CCP1CON         equ	23	;# 
   146     0018                     RCSTA           equ	24	;# 
   147     0019                     TXREG           equ	25	;# 
   148     001A                     RCREG           equ	26	;# 
   149     001B                     CCPR2           equ	27	;# 
   150     001B                     CCPR2L          equ	27	;# 
   151     001C                     CCPR2H          equ	28	;# 
   152     001D                     CCP2CON         equ	29	;# 
   153     001E                     ADRESH          equ	30	;# 
   154     001F                     ADCON0          equ	31	;# 
   155     0081                     OPTION_REG      equ	129	;# 
   156     0085                     TRISA           equ	133	;# 
   157     0086                     TRISB           equ	134	;# 
   158     0087                     TRISC           equ	135	;# 
   159     0088                     TRISD           equ	136	;# 
   160     0089                     TRISE           equ	137	;# 
   161     008C                     PIE1            equ	140	;# 
   162     008D                     PIE2            equ	141	;# 
   163     008E                     PCON            equ	142	;# 
   164     0091                     SSPCON2         equ	145	;# 
   165     0092                     PR2             equ	146	;# 
   166     0093                     SSPADD          equ	147	;# 
   167     0094                     SSPSTAT         equ	148	;# 
   168     0098                     TXSTA           equ	152	;# 
   169     0099                     SPBRG           equ	153	;# 
   170     009C                     CMCON           equ	156	;# 
   171     009D                     CVRCON          equ	157	;# 
   172     009E                     ADRESL          equ	158	;# 
   173     009F                     ADCON1          equ	159	;# 
   174     010C                     EEDATA          equ	268	;# 
   175     010D                     EEADR           equ	269	;# 
   176     010E                     EEDATH          equ	270	;# 
   177     010F                     EEADRH          equ	271	;# 
   178     018C                     EECON1          equ	396	;# 
   179     018D                     EECON2          equ	397	;# 
   180                           
   181                           	psect	idataCOMMON
   182     068D                     __pidataCOMMON:
   183                           
   184                           ;initializer for _PORTB_Ptr
   185     068D  3406               	retlw	6
   186                           
   187                           	psect	idataBANK0
   188     068E                     __pidataBANK0:
   189                           
   190                           ;initializer for main@F1011
   191     068E  3400               	retlw	0
   192     068F  3400               	retlw	0
   193     0690  3401               	retlw	1
   194     0691  3400               	retlw	0
   195     0692  3402               	retlw	2
   196     0693  3400               	retlw	0
   197     0694  3403               	retlw	3
   198     0695  3400               	retlw	0
   199     0696  3404               	retlw	4
   200     0697  3400               	retlw	0
   201     0698  3405               	retlw	5
   202     0699  3400               	retlw	0
   203     069A  3406               	retlw	6
   204     069B  3400               	retlw	0
   205     069C  3407               	retlw	7
   206     069D  3400               	retlw	0
   207     0006                     _PORTB          set	6
   208     0086                     _TRISB          set	134
   209                           
   210                           	psect	cinit
   211     07E8                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07E8                     __initialization:
   215                           
   216                           ; Initialize objects allocated to BANK0
   217     07E8  1383               	bcf	3,7	;select IRP bank0
   218     07E9  304A               	movlw	low (__pdataBANK0+16)
   219     07EA  00FD               	movwf	btemp+-1
   220     07EB  3006               	movlw	high __pidataBANK0
   221     07EC  00FE               	movwf	btemp
   222     07ED  308E               	movlw	low __pidataBANK0
   223     07EE  00FF               	movwf	btemp+1
   224     07EF  303A               	movlw	low __pdataBANK0
   225     07F0  0084               	movwf	4
   226     07F1  120A  118A  26A2  120A  118A  	fcall	init_ram0
   227                           
   228                           ; Initialize objects allocated to COMMON
   229     07F6  120A  118A  268D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   230     07FB  00FD               	movwf	__pdataCOMMON& (0+127)
   231     07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234     07FC                     __end_of__initialization:
   235     07FC  0183               	clrf	3
   236     07FD  120A  118A  2F2F   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	dataCOMMON
   239     007D                     __pdataCOMMON:
   240     007D                     _PORTB_Ptr:
   241     007D                     	ds	1
   242                           
   243                           	psect	dataBANK0
   244     003A                     __pdataBANK0:
   245     003A                     main@F1011:
   246     003A                     	ds	16
   247                           
   248                           	psect	inittext
   249     069E                     init_fetch0:	
   250                           ;	Called with low address in FSR and high address in W
   251                           
   252     069E  087E               	movf	btemp,w
   253     069F  008A               	movwf	10
   254     06A0  087F               	movf	btemp+1,w
   255     06A1  0082               	movwf	2
   256     06A2                     init_ram0:	
   257                           ;Called with:
   258                           ;	high address of idata address in btemp 
   259                           ;	low address of idata address in btemp+1 
   260                           ;	low address of data in FSR
   261                           ;	high address + 1 of data in btemp-1
   262                           
   263     06A2  120A  118A  269E  120A  118A  	fcall	init_fetch0
   264     06A7  0080               	movwf	0
   265     06A8  0A84               	incf	4,f
   266     06A9  0804               	movf	4,w
   267     06AA  067D               	xorwf	btemp+-1,w
   268     06AB  1903               	btfsc	3,2
   269     06AC  3400               	retlw	0
   270     06AD  0AFF               	incf	btemp+1,f
   271     06AE  1903               	btfsc	3,2
   272     06AF  0AFE               	incf	btemp,f
   273     06B0  2EA2               	goto	init_ram0
   274                           
   275                           	psect	cstackCOMMON
   276     0070                     __pcstackCOMMON:
   277     0070                     ?_main:
   278     0070                     ?___awmod:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ___awmod@divisor:	
   282                           ; 2 bytes @ 0x0
   283                           
   284                           
   285                           ; 2 bytes @ 0x0
   286     0070                     	ds	2
   287     0072                     ___awmod@dividend:
   288                           
   289                           ; 2 bytes @ 0x2
   290     0072                     	ds	2
   291     0074                     ___awmod@counter:
   292     0074                     ??___awmod:	
   293                           ; 1 bytes @ 0x4
   294                           
   295                           
   296                           ; 1 bytes @ 0x4
   297     0074                     	ds	1
   298     0075                     ___awmod@sign:
   299                           
   300                           ; 1 bytes @ 0x5
   301     0075                     	ds	1
   302     0076                     ?_ledChoice:
   303     0076                     ledChoice@rbCurr:	
   304                           ; 1 bytes @ 0x6
   305                           
   306                           
   307                           ; 2 bytes @ 0x6
   308     0076                     	ds	2
   309     0078                     ledChoice@rbPrev:
   310                           
   311                           ; 2 bytes @ 0x8
   312     0078                     	ds	2
   313     007A                     ??_ledChoice:
   314                           
   315                           ; 1 bytes @ 0xA
   316     007A                     	ds	3
   317                           
   318                           	psect	cstackBANK0
   319     0020                     __pcstackBANK0:
   320     0020                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x0
   323     0020                     	ds	4
   324     0024                     main@sequence:
   325                           
   326                           ; 16 bytes @ 0x4
   327     0024                     	ds	16
   328     0034                     main@i:
   329                           
   330                           ; 2 bytes @ 0x14
   331     0034                     	ds	2
   332     0036                     main@i_44:
   333                           
   334                           ; 2 bytes @ 0x16
   335     0036                     	ds	2
   336     0038                     main@sequenceLength:
   337                           
   338                           ; 2 bytes @ 0x18
   339     0038                     	ds	2
   340                           
   341                           	psect	maintext
   342     072F                     __pmaintext:	
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 38 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  i               2   22[BANK0 ] int 
   353 ;;  i               2   20[BANK0 ] int 
   354 ;;  sequence       16    4[BANK0 ] int [8]
   355 ;;  sequenceLeng    2   24[BANK0 ] int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B00/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0      22       0       0       0
   367 ;;      Temps:          0       4       0       0       0
   368 ;;      Totals:         0      26       0       0       0
   369 ;;Total ram usage:       26 bytes
   370 ;; Hardware stack levels required when called: 1
   371 ;; This function calls:
   372 ;;		___awmod
   373 ;;		_ledChoice
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379     072F                     _main:	
   380                           ;psect for function _main
   381                           
   382     072F                     l680:	
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   385                           
   386     072F  1683               	bsf	3,5	;RP0=1, select bank1
   387     0730  1303               	bcf	3,6	;RP1=0, select bank1
   388     0731  0186               	clrf	6	;volatile
   389     0732  1283               	bcf	3,5	;RP0=0, select bank0
   390     0733  1303               	bcf	3,6	;RP1=0, select bank0
   391     0734  0186               	clrf	6	;volatile
   392     0735                     l682:
   393     0735  303A               	movlw	main@F1011& (0+255)
   394     0736  0084               	movwf	4
   395     0737  3024               	movlw	low main@sequence
   396     0738  00A0               	movwf	??_main
   397     0739  3010               	movlw	16
   398     073A  00A1               	movwf	??_main+1
   399     073B                     u260:
   400     073B  1383               	bcf	3,7	;select IRP bank0
   401     073C  0800               	movf	0,w
   402     073D  00A2               	movwf	??_main+2
   403     073E  0A04               	incf	4,w
   404     073F  00A3               	movwf	??_main+3
   405     0740  0820               	movf	??_main,w
   406     0741  0084               	movwf	4
   407     0742  0822               	movf	??_main+2,w
   408     0743  0080               	movwf	0
   409     0744  0A04               	incf	4,w
   410     0745  00A0               	movwf	??_main
   411     0746  0823               	movf	??_main+3,w
   412     0747  0084               	movwf	4
   413     0748  0BA1               	decfsz	??_main+1,f
   414     0749  2F3B               	goto	u260
   415     074A                     l684:
   416     074A  3008               	movlw	8
   417     074B  00B8               	movwf	main@sequenceLength
   418     074C  3000               	movlw	0
   419     074D  00B9               	movwf	main@sequenceLength+1
   420     074E                     l686:
   421     074E  01B4               	clrf	main@i
   422     074F  01B5               	clrf	main@i+1
   423     0750  2F91               	goto	l692
   424     0751                     l688:
   425     0751  1283               	bcf	3,5	;RP0=0, select bank0
   426     0752  1303               	bcf	3,6	;RP1=0, select bank0
   427     0753  0834               	movf	main@i,w
   428     0754  00A0               	movwf	??_main
   429     0755  0720               	addwf	??_main,w
   430     0756  3E24               	addlw	(low (main@sequence| 0))& (0+255)
   431     0757  0084               	movwf	4
   432     0758  1383               	bcf	3,7	;select IRP bank0
   433     0759  0800               	movf	0,w
   434     075A  00F6               	movwf	ledChoice@rbCurr
   435     075B  0A84               	incf	4,f
   436     075C  0800               	movf	0,w
   437     075D  00F7               	movwf	ledChoice@rbCurr+1
   438     075E  0839               	movf	main@sequenceLength+1,w
   439     075F  00F1               	movwf	___awmod@divisor+1
   440     0760  0838               	movf	main@sequenceLength,w
   441     0761  00F0               	movwf	___awmod@divisor
   442     0762  0838               	movf	main@sequenceLength,w
   443     0763  0734               	addwf	main@i,w
   444     0764  00A1               	movwf	??_main+1
   445     0765  0839               	movf	main@sequenceLength+1,w
   446     0766  1803               	skipnc
   447     0767  0A39               	incf	main@sequenceLength+1,w
   448     0768  0735               	addwf	main@i+1,w
   449     0769  00A2               	movwf	??_main+2
   450     076A  0821               	movf	??_main+1,w
   451     076B  3EFF               	addlw	255
   452     076C  00F2               	movwf	___awmod@dividend
   453     076D  0822               	movf	??_main+2,w
   454     076E  1803               	skipnc
   455     076F  3E01               	addlw	1
   456     0770  3EFF               	addlw	255
   457     0771  00F3               	movwf	___awmod@dividend+1
   458     0772  120A  118A  26D8  120A  118A  	fcall	___awmod
   459     0777  0870               	movf	?___awmod,w
   460     0778  1283               	bcf	3,5	;RP0=0, select bank0
   461     0779  1303               	bcf	3,6	;RP1=0, select bank0
   462     077A  00A3               	movwf	??_main+3
   463     077B  0723               	addwf	??_main+3,w
   464     077C  3E24               	addlw	(low (main@sequence| 0))& (0+255)
   465     077D  0084               	movwf	4
   466     077E  1383               	bcf	3,7	;select IRP bank0
   467     077F  0800               	movf	0,w
   468     0780  00F8               	movwf	ledChoice@rbPrev
   469     0781  0A84               	incf	4,f
   470     0782  0800               	movf	0,w
   471     0783  00F9               	movwf	ledChoice@rbPrev+1
   472     0784  120A  118A  26B1  120A  118A  	fcall	_ledChoice
   473     0789                     l690:
   474     0789  3001               	movlw	1
   475     078A  1283               	bcf	3,5	;RP0=0, select bank0
   476     078B  1303               	bcf	3,6	;RP1=0, select bank0
   477     078C  07B4               	addwf	main@i,f
   478     078D  1803               	skipnc
   479     078E  0AB5               	incf	main@i+1,f
   480     078F  3000               	movlw	0
   481     0790  07B5               	addwf	main@i+1,f
   482     0791                     l692:
   483     0791  0835               	movf	main@i+1,w
   484     0792  3A80               	xorlw	128
   485     0793  00A0               	movwf	??_main
   486     0794  0839               	movf	main@sequenceLength+1,w
   487     0795  3A80               	xorlw	128
   488     0796  0220               	subwf	??_main,w
   489     0797  1D03               	skipz
   490     0798  2F9B               	goto	u275
   491     0799  0838               	movf	main@sequenceLength,w
   492     079A  0234               	subwf	main@i,w
   493     079B                     u275:
   494     079B  1C03               	skipc
   495     079C  2F9E               	goto	u271
   496     079D  2F9F               	goto	u270
   497     079E                     u271:
   498     079E  2F51               	goto	l688
   499     079F                     u270:
   500     079F                     l694:
   501     079F  1283               	bcf	3,5	;RP0=0, select bank0
   502     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   503     07A1  0838               	movf	main@sequenceLength,w
   504     07A2  3EFE               	addlw	254
   505     07A3  00B6               	movwf	main@i_44
   506     07A4  0839               	movf	main@sequenceLength+1,w
   507     07A5  1803               	skipnc
   508     07A6  3E01               	addlw	1
   509     07A7  3EFF               	addlw	255
   510     07A8  00B7               	movwf	main@i_44+1
   511     07A9                     l696:
   512     07A9  1FB7               	btfss	main@i_44+1,7
   513     07AA  2FAC               	goto	u281
   514     07AB  2FAD               	goto	u280
   515     07AC                     u281:
   516     07AC  2FAE               	goto	l700
   517     07AD                     u280:
   518     07AD  2F4E               	goto	l686
   519     07AE                     l700:
   520     07AE  0836               	movf	main@i_44,w
   521     07AF  00A0               	movwf	??_main
   522     07B0  0720               	addwf	??_main,w
   523     07B1  3E24               	addlw	(low (main@sequence| 0))& (0+255)
   524     07B2  0084               	movwf	4
   525     07B3  1383               	bcf	3,7	;select IRP bank0
   526     07B4  0800               	movf	0,w
   527     07B5  00F6               	movwf	ledChoice@rbCurr
   528     07B6  0A84               	incf	4,f
   529     07B7  0800               	movf	0,w
   530     07B8  00F7               	movwf	ledChoice@rbCurr+1
   531     07B9  0839               	movf	main@sequenceLength+1,w
   532     07BA  00F1               	movwf	___awmod@divisor+1
   533     07BB  0838               	movf	main@sequenceLength,w
   534     07BC  00F0               	movwf	___awmod@divisor
   535     07BD  0836               	movf	main@i_44,w
   536     07BE  3E01               	addlw	1
   537     07BF  00F2               	movwf	___awmod@dividend
   538     07C0  0837               	movf	main@i_44+1,w
   539     07C1  1803               	skipnc
   540     07C2  3E01               	addlw	1
   541     07C3  3E00               	addlw	0
   542     07C4  00F3               	movwf	___awmod@dividend+1
   543     07C5  120A  118A  26D8  120A  118A  	fcall	___awmod
   544     07CA  0870               	movf	?___awmod,w
   545     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   546     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   547     07CD  00A1               	movwf	??_main+1
   548     07CE  0721               	addwf	??_main+1,w
   549     07CF  3E24               	addlw	(low (main@sequence| 0))& (0+255)
   550     07D0  0084               	movwf	4
   551     07D1  1383               	bcf	3,7	;select IRP bank0
   552     07D2  0800               	movf	0,w
   553     07D3  00F8               	movwf	ledChoice@rbPrev
   554     07D4  0A84               	incf	4,f
   555     07D5  0800               	movf	0,w
   556     07D6  00F9               	movwf	ledChoice@rbPrev+1
   557     07D7  120A  118A  26B1  120A  118A  	fcall	_ledChoice
   558     07DC                     l702:
   559     07DC  30FF               	movlw	255
   560     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   561     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   562     07DF  07B6               	addwf	main@i_44,f
   563     07E0  1803               	skipnc
   564     07E1  0AB7               	incf	main@i_44+1,f
   565     07E2  30FF               	movlw	255
   566     07E3  07B7               	addwf	main@i_44+1,f
   567     07E4  2FA9               	goto	l696
   568     07E5  120A  118A  2800   	ljmp	start
   569     07E8                     __end_of_main:
   570                           
   571                           	psect	text1
   572     06B1                     __ptext1:	
   573 ;; *************** function _ledChoice *****************
   574 ;; Defined at:
   575 ;;		line 30 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  rbCurr          2    6[COMMON] int 
   578 ;;  rbPrev          2    8[COMMON] int 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         4       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          3       0       0       0       0
   593 ;;      Totals:         7       0       0       0       0
   594 ;;Total ram usage:        7 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603     06B1                     _ledChoice:	
   604                           ;psect for function _ledChoice
   605                           
   606     06B1                     l638:	
   607                           ;incstack = 0
   608                           ; Regs used in _ledChoice: [wreg+status,2+status,0]
   609                           
   610                           
   611                           ;main.c: 31: 
   612     06B1  3001               	movlw	1
   613     06B2  00FA               	movwf	??_ledChoice
   614     06B3  0A78               	incf	ledChoice@rbPrev,w
   615     06B4  2EB7               	goto	u154
   616     06B5                     u155:
   617     06B5  1003               	clrc
   618     06B6  0DFA               	rlf	??_ledChoice,f
   619     06B7                     u154:
   620     06B7  3EFF               	addlw	-1
   621     06B8  1D03               	skipz
   622     06B9  2EB5               	goto	u155
   623     06BA  087A               	movf	??_ledChoice,w
   624     06BB  3AFF               	xorlw	255
   625     06BC  1283               	bcf	3,5	;RP0=0, select bank0
   626     06BD  1303               	bcf	3,6	;RP1=0, select bank0
   627     06BE  0586               	andwf	6,f	;volatile
   628                           
   629                           ;main.c: 32:         for (int i = sequenceLength - 2; i >= 0; i--) {
   630     06BF  3001               	movlw	1
   631     06C0  00FA               	movwf	??_ledChoice
   632     06C1  0A76               	incf	ledChoice@rbCurr,w
   633     06C2  2EC5               	goto	u164
   634     06C3                     u165:
   635     06C3  1003               	clrc
   636     06C4  0DFA               	rlf	??_ledChoice,f
   637     06C5                     u164:
   638     06C5  3EFF               	addlw	-1
   639     06C6  1D03               	skipz
   640     06C7  2EC3               	goto	u165
   641     06C8  087A               	movf	??_ledChoice,w
   642     06C9  0486               	iorwf	6,f	;volatile
   643     06CA                     l640:
   644                           
   645                           ;main.c: 33:             ledChoice(sequence[i], sequence[(i + 1) % sequenceLength]);
   646     06CA  3002               	movlw	2
   647     06CB  00FC               	movwf	??_ledChoice+2
   648     06CC  3045               	movlw	69
   649     06CD  00FB               	movwf	??_ledChoice+1
   650     06CE  30A9               	movlw	169
   651     06CF  00FA               	movwf	??_ledChoice
   652     06D0                     u297:
   653     06D0  0BFA               	decfsz	??_ledChoice,f
   654     06D1  2ED0               	goto	u297
   655     06D2  0BFB               	decfsz	??_ledChoice+1,f
   656     06D3  2ED0               	goto	u297
   657     06D4  0BFC               	decfsz	??_ledChoice+2,f
   658     06D5  2ED0               	goto	u297
   659     06D6  2ED7               	nop2
   660     06D7                     l11:
   661     06D7  0008               	return
   662     06D8                     __end_of_ledChoice:
   663                           
   664                           	psect	text2
   665     06D8                     __ptext2:	
   666 ;; *************** function ___awmod *****************
   667 ;; Defined at:
   668 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  divisor         2    0[COMMON] int 
   671 ;;  dividend        2    2[COMMON] int 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  sign            1    5[COMMON] unsigned char 
   674 ;;  counter         1    4[COMMON] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  2    0[COMMON] int 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         4       0       0       0       0
   685 ;;      Locals:         2       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0
   687 ;;      Totals:         6       0       0       0       0
   688 ;;Total ram usage:        6 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697     06D8                     ___awmod:	
   698                           ;psect for function ___awmod
   699                           
   700     06D8                     l642:	
   701                           ;incstack = 0
   702                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   703                           
   704     06D8  01F5               	clrf	___awmod@sign
   705     06D9                     l644:
   706     06D9  1FF3               	btfss	___awmod@dividend+1,7
   707     06DA  2EDC               	goto	u171
   708     06DB  2EDD               	goto	u170
   709     06DC                     u171:
   710     06DC  2EE4               	goto	l650
   711     06DD                     u170:
   712     06DD                     l646:
   713     06DD  09F2               	comf	___awmod@dividend,f
   714     06DE  09F3               	comf	___awmod@dividend+1,f
   715     06DF  0AF2               	incf	___awmod@dividend,f
   716     06E0  1903               	skipnz
   717     06E1  0AF3               	incf	___awmod@dividend+1,f
   718     06E2                     l648:
   719     06E2  3001               	movlw	1
   720     06E3  00F5               	movwf	___awmod@sign
   721     06E4                     l650:
   722     06E4  1FF1               	btfss	___awmod@divisor+1,7
   723     06E5  2EE7               	goto	u181
   724     06E6  2EE8               	goto	u180
   725     06E7                     u181:
   726     06E7  2EED               	goto	l654
   727     06E8                     u180:
   728     06E8                     l652:
   729     06E8  09F0               	comf	___awmod@divisor,f
   730     06E9  09F1               	comf	___awmod@divisor+1,f
   731     06EA  0AF0               	incf	___awmod@divisor,f
   732     06EB  1903               	skipnz
   733     06EC  0AF1               	incf	___awmod@divisor+1,f
   734     06ED                     l654:
   735     06ED  0870               	movf	___awmod@divisor,w
   736     06EE  0471               	iorwf	___awmod@divisor+1,w
   737     06EF  1903               	btfsc	3,2
   738     06F0  2EF2               	goto	u191
   739     06F1  2EF3               	goto	u190
   740     06F2                     u191:
   741     06F2  2F20               	goto	l672
   742     06F3                     u190:
   743     06F3                     l656:
   744     06F3  3001               	movlw	1
   745     06F4  00F4               	movwf	___awmod@counter
   746     06F5  2EFF               	goto	l662
   747     06F6                     l658:
   748     06F6  3001               	movlw	1
   749     06F7                     u205:
   750     06F7  1003               	clrc
   751     06F8  0DF0               	rlf	___awmod@divisor,f
   752     06F9  0DF1               	rlf	___awmod@divisor+1,f
   753     06FA  3EFF               	addlw	-1
   754     06FB  1D03               	skipz
   755     06FC  2EF7               	goto	u205
   756     06FD                     l660:
   757     06FD  3001               	movlw	1
   758     06FE  07F4               	addwf	___awmod@counter,f
   759     06FF                     l662:
   760     06FF  1FF1               	btfss	___awmod@divisor+1,7
   761     0700  2F02               	goto	u211
   762     0701  2F03               	goto	u210
   763     0702                     u211:
   764     0702  2EF6               	goto	l658
   765     0703                     u210:
   766     0703                     l664:
   767     0703  0871               	movf	___awmod@divisor+1,w
   768     0704  0273               	subwf	___awmod@dividend+1,w
   769     0705  1D03               	skipz
   770     0706  2F09               	goto	u225
   771     0707  0870               	movf	___awmod@divisor,w
   772     0708  0272               	subwf	___awmod@dividend,w
   773     0709                     u225:
   774     0709  1C03               	skipc
   775     070A  2F0C               	goto	u221
   776     070B  2F0D               	goto	u220
   777     070C                     u221:
   778     070C  2F13               	goto	l668
   779     070D                     u220:
   780     070D                     l666:
   781     070D  0870               	movf	___awmod@divisor,w
   782     070E  02F2               	subwf	___awmod@dividend,f
   783     070F  0871               	movf	___awmod@divisor+1,w
   784     0710  1C03               	skipc
   785     0711  03F3               	decf	___awmod@dividend+1,f
   786     0712  02F3               	subwf	___awmod@dividend+1,f
   787     0713                     l668:
   788     0713  3001               	movlw	1
   789     0714                     u235:
   790     0714  1003               	clrc
   791     0715  0CF1               	rrf	___awmod@divisor+1,f
   792     0716  0CF0               	rrf	___awmod@divisor,f
   793     0717  3EFF               	addlw	-1
   794     0718  1D03               	skipz
   795     0719  2F14               	goto	u235
   796     071A                     l670:
   797     071A  3001               	movlw	1
   798     071B  02F4               	subwf	___awmod@counter,f
   799     071C  1D03               	btfss	3,2
   800     071D  2F1F               	goto	u241
   801     071E  2F20               	goto	u240
   802     071F                     u241:
   803     071F  2F03               	goto	l664
   804     0720                     u240:
   805     0720                     l672:
   806     0720  0875               	movf	___awmod@sign,w
   807     0721  1903               	btfsc	3,2
   808     0722  2F24               	goto	u251
   809     0723  2F25               	goto	u250
   810     0724                     u251:
   811     0724  2F2A               	goto	l676
   812     0725                     u250:
   813     0725                     l674:
   814     0725  09F2               	comf	___awmod@dividend,f
   815     0726  09F3               	comf	___awmod@dividend+1,f
   816     0727  0AF2               	incf	___awmod@dividend,f
   817     0728  1903               	skipnz
   818     0729  0AF3               	incf	___awmod@dividend+1,f
   819     072A                     l676:
   820     072A  0873               	movf	___awmod@dividend+1,w
   821     072B  00F1               	movwf	?___awmod+1
   822     072C  0872               	movf	___awmod@dividend,w
   823     072D  00F0               	movwf	?___awmod
   824     072E                     l278:
   825     072E  0008               	return
   826     072F                     __end_of___awmod:
   827     0002                     ___latbits      equ	2
   828     007E                     btemp           set	126	;btemp
   829     007E                     wtemp0          set	126
   830                           
   831                           	psect	config
   832                           
   833                           ;Config register CONFIG @ 0x2007
   834                           ;	Oscillator Selection bits
   835                           ;	FOSC = HS, HS oscillator
   836                           ;	Watchdog Timer Enable bit
   837                           ;	WDTE = OFF, WDT disabled
   838                           ;	Power-up Timer Enable bit
   839                           ;	PWRTE = OFF, PWRT disabled
   840                           ;	Brown-out Reset Enable bit
   841                           ;	BOREN = ON, BOR enabled
   842                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   843                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   844                           ;	Data EEPROM Memory Code Protection bit
   845                           ;	CPD = OFF, Data EEPROM code protection off
   846                           ;	Flash Program Memory Write Enable bits
   847                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   848                           ;	In-Circuit Debugger Mode bit
   849                           ;	DEBUG = 0x1, unprogrammed default
   850                           ;	Flash Program Memory Code Protection bit
   851                           ;	CP = OFF, Code protection off
   852     2007                     	org	8199
   853     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     26      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    PORTB_Ptr	PTR volatile unsigned char  size(1) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_ledChoice
    _ledChoice->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0     710
                                              0 BANK0     26    26      0
                            ___awmod
                          _ledChoice
 ---------------------------------------------------------------------------------
 (1) _ledChoice                                            7     3      4      48
                                              6 COMMON     7     3      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _ledChoice
     ___awmod (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     26      42     52.5%
BITBANK0            80      0       0      0.0%
COMMON              14     13      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      56      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jul 09 13:30:20 2025

                      pc 0002                       l11 06D7                       fsr 0004  
                    l700 07AE                      l278 072E                      l702 07DC  
                    l640 06CA                      l650 06E4                      l642 06D8  
                    l660 06FD                      l652 06E8                      l644 06D9  
                    l670 071A                      l662 06FF                      l654 06ED  
                    l646 06DD                      l638 06B1                      l664 0703  
                    l656 06F3                      l672 0720                      l648 06E2  
                    l680 072F                      l674 0725                      l666 070D  
                    l658 06F6                      l690 0789                      l682 0735  
                    l676 072A                      l668 0713                      l692 0791  
                    l684 074A                      l694 079F                      l686 074E  
                    l696 07A9                      l688 0751                      u210 0703  
                    u211 0702                      u220 070D                      u221 070C  
                    u205 06F7                      u240 0720                      u241 071F  
                    u225 0709                      u250 0725                      u170 06DD  
                    u154 06B7                      u251 0724                      u235 0714  
                    u171 06DC                      u155 06B5                      u180 06E8  
                    u164 06C5                      u260 073B                      u181 06E7  
                    u165 06C3                      u190 06F3                      u270 079F  
                    u191 06F2                      u271 079E                      u280 07AD  
                    u281 07AC                      u275 079B                      u297 06D0  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
        ledChoice@rbCurr 0076          ledChoice@rbPrev 0078                     _main 072F  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awmod 072F                    _PORTB 0006                    _TRISB 0086  
                  main@i 0034             main@sequence 0024                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E8  
           __end_of_main 07E8       main@sequenceLength 0038                   ??_main 0020  
              ??___awmod 0074          ___awmod@divisor 0070          ___awmod@counter 0074  
           __pdataCOMMON 007D  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 068E               __pmaintext 072F        __end_of_ledChoice 06D8  
                ___awmod 06D8                  __ptext1 06B1                  __ptext2 06D8  
       ___awmod@dividend 0072     end_of_initialization 07FC                _PORTB_Ptr 007D  
          __pidataCOMMON 068D      start_initialization 07E8               init_fetch0 069E  
            __pdataBANK0 003A                ___latbits 0002            __pcstackBANK0 0020  
              _ledChoice 06B1                 ?___awmod 0070                main@F1011 003A  
             ?_ledChoice 0076              ??_ledChoice 007A                 main@i_44 0036  
               init_ram0 06A2  
